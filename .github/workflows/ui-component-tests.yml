name: 🧪 UI Component Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
    
# Cancel previous runs when new commits are pushed to the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Set permissions for GitHub token
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  component-tests:
    name: Component Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run component tests
        run: npm run test
        env:
          VITE_CODEGEN_TOKEN: mock-codegen-token
          VITE_CODEGEN_ORG_ID: 123
          VITE_GITHUB_TOKEN: mock-github-token
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            test-results/
            
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: component-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run integration tests with actual templates
        run: npm run test:integration
        env:
          VITE_CODEGEN_TOKEN: ${{ secrets.CODEGEN_TOKEN }}
          VITE_CODEGEN_ORG_ID: ${{ secrets.CODEGEN_ORG_ID }}
          VITE_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: integration-test-results/
          
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: component-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps
        
      - name: Run visual regression tests
        run: npm run test:visual
        
      - name: Upload visual test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-results
          path: |
            playwright-report/
            test-results/
            
  report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [component-tests, integration-tests, visual-regression]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Generate combined report
        run: |
          echo "## 📊 Test Results Summary" > test-report.md
          echo "" >> test-report.md
          echo "### Component Tests" >> test-report.md
          if [ -f artifacts/test-results/summary.json ]; then
            echo "✅ All component tests passed" >> test-report.md
          else
            echo "❌ Component tests failed" >> test-report.md
          fi
          echo "" >> test-report.md
          echo "### Integration Tests" >> test-report.md
          if [ -f artifacts/integration-test-results/summary.json ]; then
            echo "✅ All integration tests passed" >> test-report.md
          else
            echo "❌ Integration tests failed" >> test-report.md
          fi
          echo "" >> test-report.md
          echo "### Visual Regression Tests" >> test-report.md
          if [ -f artifacts/visual-test-results/summary.json ]; then
            echo "✅ All visual tests passed" >> test-report.md
          else
            echo "❌ Visual tests failed" >> test-report.md
          fi
          
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('test-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
